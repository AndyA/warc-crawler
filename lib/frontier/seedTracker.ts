/**
 * Copyright 2017-2019 John Berlin <n0tan3rd@gmail.com>. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @desc Tracks the progress of crawl per starting seed URL. Because multiple seeds can be used,
 * each potentially generating additional URLs to crawl, SeedTrackers consolidate this process per
 * starting seed. Tracks the URLs discovered for a starting seed and allows for propagation of the crawl
 * mode throughout the entirety of the crawl.
 */
class SeedTracker {
 depth: any;
 mode: any;
 seen: any;
 url: any;
 urlCount: any;
 /**
  * @param {string} url - A starting seed
  * @param {symbol} mode - The mode for the seed
  * @param {number} depth - The crawl depth
  */
 constructor(url, mode, depth) {
   /**
    * @desc How many URLs are left to crawl that originated from the starting seed
    * @type {number}
    */
   this.urlCount = 1;

   /**
    * @desc The URL of the starting seed
    * @type {string}
    */
   this.url = url;

   /**
    * @desc The crawl mode symbol the seed is operating under
    * @type {symbol}
    */
   this.mode = mode;

   /**
    * @desc A set of URLs used for duplication of URLs generated by this seed during the crawl
    * @type {Set<string>}
    */
   this.seen = new Set([url]);

   /**
    * @desc The depth of the crawl for this seed
    * @type {number}
    */
   this.depth = depth;
 }

 /**
  * @desc Are there no more URLs to be crawled that are associated with this seed
  * @returns {boolean}
  */
 done() {
   return this.urlCount === 0;
 }

 /**
  * @desc Decreases the number of URLs left to crawl for this seed
  */
 crawledURL() {
   this.urlCount -= 1;
 }

 /**
  * @desc Have we seen the supplied URL
  * @param {string} url - The URL to check if we have seen it
  * @returns {boolean}
  */
 seenURL(url) {
   return this.seen.has(url);
 }

 /**
  * @desc Adds a URL to the set of URLs seen and increments the seeds URL count
  * @param {string} url - The URL to mark as seen
  */
 addToSeen(url) {
   this.seen.add(url);
   this.urlCount += 1;
 }
}

/**
 * @type {SeedTracker}
 */
export default SeedTracker;
